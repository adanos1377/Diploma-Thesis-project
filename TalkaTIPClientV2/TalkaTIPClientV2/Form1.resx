<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAC5AAAAzAAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAywAAALoAAAAAAAAAAAAA
        AEoAAADnAAAA5AAAAEoAAAAAAAAAAAAAAAAAAAAAAAAABgAAAG8AAADLAAAA9AAAAPQAAADLAAAAbwAA
        AAYAAAAAAAAAAAAAAMsAAAD/AAAA1QAAABcAAAAAAAAAAAAAAAAAAAAAAAAAFgAAANUAAAD/AAAAywAA
        AAAAAAAAAAAA5gAAAP8AAAD/AAAA5wAAAAAAAAAAAAAAAAAAABsAAADPAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA0AAAABsAAAAAAAAAFwAAANUAAAD/AAAA1QAAABcAAAAAAAAAAAAAABcAAADVAAAA/wAA
        ANUAAAAXAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAHAAAA0AAAAP8AAADYAAAAUgAA
        AA0AAAANAAAAUgAAANgAAAD/AAAA0QAAAAcAAAAAAAAAFwAAANUAAAD/AAAA1QAAABcAAAAXAAAA1QAA
        AP8AAADVAAAAFwAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAG4AAAD/AAAA1wAA
        ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAANcAAAD/AAAAbgAAAAAAAAAAAAAAFwAAANUAAAD/AAAA1QAA
        ANUAAAD/AAAA1QAAABcAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAxwAA
        AP8AAABSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAAAP8AAADHAAAAAAAAAAAAAAAAAAAAFwAA
        ANUAAAD/AAAA/wAAANUAAAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAA
        AAAAAAD5AAAA/wAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAA/wAAAPMAAAAAAAAAAAAA
        AAAAAAAXAAAA1QAAAP8AAAD/AAAA1QAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAA
        AP8AAAAAAAAAAAAAAPkAAAD/AAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAD/AAAA+AAA
        AAAAAAAAAAAAFwAAANUAAAD/AAAA1QAAANUAAAD/AAAA1gAAABcAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAAAAAAAAxwAAAP8AAABSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAA
        AP8AAADHAAAAAAAAABcAAADVAAAA/wAAANUAAAAWAAAAFwAAANUAAAD/AAAA1gAAABcAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAABtAAAA/wAAANgAAAAQAAAAAAAAAAAAAAAAAAAAAAAA
        ABAAAADYAAAA/wAAAG0AAAAXAAAA1QAAAP8AAADVAAAAFgAAAAAAAAAAAAAAFwAAANUAAAD/AAAA1gAA
        ABcAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAYAAADPAAAA/wAAANoAAABSAAAADgAA
        AA4AAABSAAAA2gAAAP8AAADQAAAABwAAAM4AAAD/AAAA1QAAABYAAAAAAAAAAAAAAAAAAAAAAAAAFgAA
        ANUAAAD/AAAAzgAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAABsAAADPAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAzwAAABsAAAAAAAAAxwAAAM4AAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFgAAAM4AAADHAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAYAAABuAAAAxwAAAPMAAADzAAAAxwAAAG4AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASgAA
        AOcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA5AAA
        AEoAAADmAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA5wAAAOYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADmAAAASQAAAOYAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA5gAAAEkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAbwAA
        AMsAAAD0AAAA9AAAAMsAAABvAAAABgAAAAAAAAAAAAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAA
        AAAAAAC5AAAAzAAAABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAywAAALoAAAAAAAAAGwAA
        AM8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADQAAAAGwAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAA
        AP8AAAAAAAAAAAAAAMsAAAD/AAAA1QAAABcAAAAAAAAAAAAAAAAAAAAAAAAAFgAAANUAAAD/AAAAywAA
        AAcAAADQAAAA/wAAANgAAABSAAAADQAAAA0AAABSAAAA2AAAAP8AAADRAAAABwAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAAAAAAAAFwAAANUAAAD/AAAA1QAAABcAAAAAAAAAAAAAABcAAADVAAAA/wAA
        ANUAAAAXAAAAbgAAAP8AAADXAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA1wAAAP8AAABuAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAFwAAANUAAAD/AAAA1QAAABcAAAAXAAAA1QAA
        AP8AAADVAAAAFwAAAAAAAADHAAAA/wAAAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSAAAA/wAA
        AMcAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAFwAAANUAAAD/AAAA1QAA
        ANUAAAD/AAAA1QAAABcAAAAAAAAAAAAAAPkAAAD/AAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAwAAAD/AAAA8wAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAA
        ANUAAAD/AAAA/wAAANUAAAAXAAAAAAAAAAAAAAAAAAAA+QAAAP8AAAAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADAAAAP8AAAD4AAAAAAAAAAAAAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAXAAAA1QAAAP8AAAD/AAAA1QAAABcAAAAAAAAAAAAAAAAAAADHAAAA/wAAAFIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABSAAAA/wAAAMcAAAAAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAFwAAANUAAAD/AAAA1QAAANUAAAD/AAAA1gAAABcAAAAAAAAAAAAAAG0AAAD/AAAA2AAA
        ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAANgAAAD/AAAAbQAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAABcAAADVAAAA/wAAANUAAAAWAAAAFwAAANUAAAD/AAAA1gAAABcAAAAAAAAABgAA
        AM8AAAD/AAAA2gAAAFIAAAAOAAAADgAAAFIAAADaAAAA/wAAANAAAAAHAAAAAAAAAAAAAAD/AAAA/wAA
        AP8AAAD/AAAAAAAAAAAAAAAXAAAA1QAAAP8AAADVAAAAFgAAAAAAAAAAAAAAFwAAANUAAAD/AAAA1gAA
        ABcAAAAAAAAAGwAAAM8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADPAAAAGwAAAAAAAAAAAAAAAAAA
        AOYAAAD/AAAA/wAAAOYAAAAAAAAAAAAAAM4AAAD/AAAA1QAAABYAAAAAAAAAAAAAAAAAAAAAAAAAFgAA
        ANUAAAD/AAAAzgAAAAAAAAAAAAAABgAAAG4AAADHAAAA8wAAAPMAAADHAAAAbgAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAASQAAAOYAAADmAAAASQAAAAAAAAAAAAAAxwAAAM4AAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFgAAAM4AAADHH4w8Aw8MOAEGDDAAgBww8MA8MfjgfDH44Hwx+MA8MfiAHDDwBgwwAA8M
        OAEfjDwD//w////8P/8AAAAAAAAAAAAAAAAAAAAA//w////8P//APDH4gBww8AAMMGAPDDgBH4w8Ax+M
        PgcfjD4HH4w8Aw8MOAEADDBggBww8MA8Mfg=
</value>
  </data>
</root>