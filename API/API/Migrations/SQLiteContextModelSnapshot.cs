// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    partial class SQLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10");

            modelBuilder.Entity("API.Models.MatchSolo", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Finished")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Players")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RankedGame")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Scores")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Solo Matches","test");
                });

            modelBuilder.Entity("API.Models.MatchTeam", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Finished")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("RankedGame")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Scores")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Teams")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Team Matches","test");
                });

            modelBuilder.Entity("API.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesLost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesTied")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesWon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.Property<string>("Rank")
                        .HasColumnType("TEXT");

                    b.Property<double>("SkillRating")
                        .HasColumnType("REAL");

                    b.Property<double>("WinRate")
                        .HasColumnType("REAL");

                    b.HasKey("PlayerId");

                    b.HasIndex("NickName")
                        .IsUnique();

                    b.ToTable("Players","test");
                });

            modelBuilder.Entity("API.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayersID")
                        .HasColumnType("TEXT");

                    b.HasKey("TeamID");

                    b.ToTable("Teams","test");
                });
#pragma warning restore 612, 618
        }
    }
}
